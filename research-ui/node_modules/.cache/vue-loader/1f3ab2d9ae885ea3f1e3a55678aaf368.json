{"remainingRequest":"D:\\Code\\Research\\research-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Code\\Research\\research-ui\\src\\views\\project\\info\\index.vue?vue&type=template&id=79dfdd01","dependencies":[{"path":"D:\\Code\\Research\\research-ui\\src\\views\\project\\info\\index.vue","mtime":1740895492666},{"path":"D:\\Code\\Research\\research-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1740793404454},{"path":"D:\\Code\\Research\\research-ui\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1740793419541},{"path":"D:\\Code\\Research\\research-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1740793404454},{"path":"D:\\Code\\Research\\research-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1740793415933}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}